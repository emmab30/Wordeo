

module.exports = Backoff;

function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 10000;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}

Backoff.prototype.duration = function () {
  var ms = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand = Math.random();
    var deviation = Math.floor(rand * this.jitter * ms);
    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
  }
  return Math.min(ms, this.max) | 0;
};

Backoff.prototype.reset = function () {
  this.attempts = 0;
};

Backoff.prototype.setMin = function (min) {
  this.ms = min;
};

Backoff.prototype.setMax = function (max) {
  this.max = max;
};

Backoff.prototype.setJitter = function (jitter) {
  this.jitter = jitter;
};