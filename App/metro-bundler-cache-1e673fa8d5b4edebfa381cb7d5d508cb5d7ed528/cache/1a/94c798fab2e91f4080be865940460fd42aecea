Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _jsxFileName = '/Users/eabuslaiman-mcpro/Trabajo/Qroom/Wordeo/App/components/SpinnerComponent.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNativeImageProgress = require('react-native-image-progress');

var _reactNativeImageProgress2 = _interopRequireDefault(_reactNativeImageProgress);

var _Circle = require('react-native-progress/Circle');

var _Circle2 = _interopRequireDefault(_Circle);

var _EntranceAfterLaunchScreen = require('./navigation/EntranceAfterLaunchScreen');

var _EntranceAfterLaunchScreen2 = _interopRequireDefault(_EntranceAfterLaunchScreen);

var _default = require('../styles/default');

var _global = require('./common/global');

var _reactNativeOrientation = require('react-native-orientation');

var _reactNativeOrientation2 = _interopRequireDefault(_reactNativeOrientation);

var _reactNativeAnimatable = require('react-native-animatable');

var Animatable = _interopRequireWildcard(_reactNativeAnimatable);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    SpinnerComponent: {
        displayName: 'SpinnerComponent'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/Users/eabuslaiman-mcpro/Trabajo/Qroom/Wordeo/App/components/SpinnerComponent.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var Spinner = require('react-native-spinkit');

var width = _reactNative.Dimensions.get('window').width;
var height = _reactNative.Dimensions.get('window').height;

var SpinnerComponent = _wrapComponent('SpinnerComponent')(function (_Component) {
    _inherits(SpinnerComponent, _Component);

    function SpinnerComponent(props) {
        _classCallCheck(this, SpinnerComponent);

        var _this = _possibleConstructorReturn(this, (SpinnerComponent.__proto__ || Object.getPrototypeOf(SpinnerComponent)).call(this, props));

        _this.onLayoutSpinner = function (e) {
            var context = _this;
            _global.Global.getOrientation(function (orientation) {
                context.setState({
                    width: _reactNative.Dimensions.get('window').width,
                    height: _reactNative.Dimensions.get('window').height
                });
            });
        };

        _this.show = function () {
            _this.refs.dialog.show();
        };

        _this.hide = function (cb) {
            _this.refs.dialog.hide(cb);
        };

        _this.onLayoutSpinner = _this.onLayoutSpinner.bind(_this);

        _this.state = _this.getInitialState();
        return _this;
    }

    _createClass(SpinnerComponent, [{
        key: 'getInitialState',
        value: function getInitialState() {
            return {
                index: 0,
                type: 'Bounce',
                size: 60,
                color: "#0e68bd",
                isVisible: false,
                width: width,
                height: height
            };
        }
    }, {
        key: 'getAnimation',
        value: function getAnimation() {
            return {
                0: {
                    scale: 0.5,
                    tintColor: _default.Color.OrangePrimary
                },
                0.5: {
                    scale: 1.2,
                    tintColor: _default.Color.LightPrimary
                },
                1: {
                    scale: 0.5,
                    tintColor: _default.Color.OrangeSecondary
                }
            };
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                isVisible = _props.isVisible,
                text = _props.text;

            return _react3.default.createElement(_EntranceAfterLaunchScreen2.default, _extends({}, this.props, {
                ref: 'dialog', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 92
                }
            }));
        }
    }]);

    return SpinnerComponent;
}(_react2.Component));

exports.default = SpinnerComponent;


var styles = _reactNative.StyleSheet.create({
    containerSpinner: {
        width: '100%',
        height: '100%',
        position: 'absolute',
        zIndex: 100000,
        justifyContent: 'center',
        alignSelf: 'center',
        alignItems: 'center',
        backgroundColor: 'rgba(0,0,0,0.80)'
    },
    spinner: {
        alignSelf: 'center',
        marginBottom: 10
    },
    imageContainer: {
        backgroundColor: 'rgba(0,0,0,.1)',
        position: 'absolute',
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        justifyContent: 'center',
        zIndex: 99
    },
    image: {
        alignSelf: 'center',
        maxWidth: 120,
        resizeMode: 'contain',
        tintColor: '#ddd'
    },
    hidden: {
        display: 'none',
        zIndex: -999999
    },
    normal: {
        display: 'flex',
        zIndex: 9999
    },
    textContainer: {
        backgroundColor: 'rgba(0,0,0,.75)',
        padding: 10,
        width: '70%',
        alignSelf: 'center',
        borderRadius: 10
    },
    text: {
        fontFamily: _default.Font.TitanOne,
        fontSize: 18,
        marginTop: 0,
        alignSelf: 'center',
        color: 'white'
    }
});