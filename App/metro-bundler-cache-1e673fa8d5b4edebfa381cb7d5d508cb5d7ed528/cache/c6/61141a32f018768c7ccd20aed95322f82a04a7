Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/eabuslaiman-mcpro/Trabajo/Qroom/Wordeo/App/components/componentsJs/RoundPlayer.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _strings = require('../../components/localization/strings');

var _reactNativeNavigation = require('react-native-navigation');

var _global = require('../../components/common/global');

var _general = require('../../styles/general');

var _default = require('../../styles/default');

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _reactNativeLinearGradient = require('react-native-linear-gradient');

var _reactNativeLinearGradient2 = _interopRequireDefault(_reactNativeLinearGradient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    RoundPlayer: {
        displayName: 'RoundPlayer'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/Users/eabuslaiman-mcpro/Trabajo/Qroom/Wordeo/App/components/componentsJs/RoundPlayer.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    height = _Dimensions$get.height,
    width = _Dimensions$get.width;

var RoundPlayer = _wrapComponent('RoundPlayer')(function (_Component) {
    _inherits(RoundPlayer, _Component);

    function RoundPlayer(props) {
        _classCallCheck(this, RoundPlayer);

        var _this = _possibleConstructorReturn(this, (RoundPlayer.__proto__ || Object.getPrototypeOf(RoundPlayer)).call(this, props));

        _this.state = {
            spinner: true
        };
        return _this;
    }

    _createClass(RoundPlayer, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            setTimeout(function () {
                _this2.setState({ spinner: false });
            }, 1500);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {}
    }, {
        key: 'render',
        value: function render() {
            if (this.state.spinner) {
                return this.renderLoading();
            }

            var _props$player = this.props.player,
                name = _props$player.name,
                avatar = _props$player.avatar;


            return _react3.default.createElement(
                _reactNativeLinearGradient2.default,
                { colors: [_default.Color.OrangePrimary, _default.Color.OrangeSecondary], style: styles.roundPlayerContainer, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 62
                    }
                },
                _react3.default.createElement(
                    _reactNative.View,
                    { style: styles.roundPlayerInfoContainer, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 63
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.View,
                        { style: styles.roundPlayerAvatarContainer, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 64
                            }
                        },
                        _react3.default.createElement(_reactNative.Image, { style: styles.roundPlayerAvatar, source: { uri: avatar }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 65
                            }
                        })
                    ),
                    _react3.default.createElement(
                        _reactNative.Text,
                        { style: styles.roundPlayerNameText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 67
                            }
                        },
                        name
                    )
                )
            );
        }
    }, {
        key: 'renderLoading',
        value: function renderLoading() {
            return _react3.default.createElement(
                _reactNativeLinearGradient2.default,
                { colors: [_default.Color.OrangePrimary, _default.Color.OrangeSecondary], style: styles.roundPlayerContainer, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 75
                    }
                },
                _react3.default.createElement(_reactNative.ActivityIndicator, { color: 'white', size: 1, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 76
                    }
                })
            );
        }
    }]);

    return RoundPlayer;
}(_react2.Component));

exports.default = RoundPlayer;


var styles = _reactNative.StyleSheet.create({
    roundPlayerContainer: {
        flex: 1,
        flexDirection: 'row',
        maxWidth: '100%',
        width: '80%',
        padding: 10,
        minHeight: 100,
        height: 100,
        paddingVertical: 5,
        alignSelf: 'center',
        justifyContent: 'center',
        backgroundColor: 'transparent',
        marginHorizontal: 5,
        marginVertical: 5,
        borderRadius: 5
    },
    roundPlayerInfoContainer: {
        flex: 1,
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'center'
    },
    roundPlayerNameText: {
        flex: 1,
        color: _default.Color.LightPrimary
    },
    roundPlayerAvatarContainer: {
        flex: 0,
        marginRight: 10
    },
    roundPlayerAvatar: {
        width: 80,
        height: 80,
        borderRadius: 40
    }
});