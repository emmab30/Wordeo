Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var buildFieldPathData = function buildFieldPathData(segments, value) {
  if (segments.length === 1) {
    return _defineProperty({}, segments[0], value);
  }
  return _defineProperty({}, segments[0], buildFieldPathData(segments.slice(1), value));
};

var mergeFieldPathData = exports.mergeFieldPathData = function mergeFieldPathData(data, segments, value) {
  if (segments.length === 1) {
    return _extends({}, data, _defineProperty({}, segments[0], value));
  } else if (data[segments[0]]) {
    return _extends({}, data, _defineProperty({}, segments[0], mergeFieldPathData(data[segments[0]], segments.slice(1), value)));
  }
  return _extends({}, data, _defineProperty({}, segments[0], buildFieldPathData(segments.slice(1), value)));
};