Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/eabuslaiman-mcpro/Trabajo/Qroom/Wordeo/App/screens/dashboard/round.js';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _strings = require('../../components/localization/strings');

var _CustomNavbar = require('../../components/navigation/CustomNavbar');

var _CustomNavbar2 = _interopRequireDefault(_CustomNavbar);

var _CustomMenu = require('../../components/navigation/CustomMenu');

var _CustomMenu2 = _interopRequireDefault(_CustomMenu);

var _SpinnerComponent = require('../../components/SpinnerComponent');

var _SpinnerComponent2 = _interopRequireDefault(_SpinnerComponent);

var _CommonDialog = require('../../components/dialogs/CommonDialog');

var _CommonDialog2 = _interopRequireDefault(_CommonDialog);

var _InviteFriendEmail = require('../../components/modals/InviteFriendEmail');

var _InviteFriendEmail2 = _interopRequireDefault(_InviteFriendEmail);

var _reactNativeNavigation = require('react-native-navigation');

var _global = require('../../components/common/global');

var _general = require('../../styles/general');

var _default = require('../../styles/default');

var _reactNativeAnimatable = require('react-native-animatable');

var Animatable = _interopRequireWildcard(_reactNativeAnimatable);

var _reactNativeInteractable = require('react-native-interactable');

var _reactNativeInteractable2 = _interopRequireDefault(_reactNativeInteractable);

var _reactNativeActionsheet = require('react-native-actionsheet');

var _reactNativeOrientation = require('react-native-orientation');

var _reactNativeOrientation2 = _interopRequireDefault(_reactNativeOrientation);

var _Services = require('../../services/Services');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    Round: {
        displayName: 'Round'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/Users/eabuslaiman-mcpro/Trabajo/Qroom/Wordeo/App/screens/dashboard/round.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var Sound = require('react-native-sound');
Sound.setCategory('Playback');

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    height = _Dimensions$get.height,
    width = _Dimensions$get.width;

var FONTSIZE_COUNTDOWN_OFF = 45;
var FONTSIZE_COUNTDOWN_ON = 100;
var INITIAL_COUNTDOWN_VALUE = 10;
var options = ['Cancelar', 'Salir de la sala', 'Invitar a un amigo'];

var Round = _wrapComponent('Round')(function (_Component) {
    _inherits(Round, _Component);

    function Round(props) {
        _classCallCheck(this, Round);

        var _this = _possibleConstructorReturn(this, (Round.__proto__ || Object.getPrototypeOf(Round)).call(this, props));

        _this.state = {
            round: {
                name: '',
                players: []
            },
            spinner: true,
            isPairing: true,
            isStartingRound: false,
            countDown: INITIAL_COUNTDOWN_VALUE,
            isMounted: true,
            soundEnabled: true,
            isInvitingFriend: false
        };

        _this.intervalCountDown = null;
        _this.commonDialog = null;
        _this._actionsDeltaY = new _reactNative.Animated.Value(0);
        _this.ActionSheet = null;
        return _this;
    }

    _createClass(Round, [{
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            _Services.SocketService.socket.emit('onLeaveRoom', { roomId: this.props.round.id });

            this.setState({ isMounted: false });
            if (this.intervalCountDown != null) clearInterval(this.intervalCountDown);

            _Services.SocketService.removeListener('onFinishedRound', this.onFinishedRound);
            _Services.SocketService.removeListener('onStartRound', this.onStartRound);
            _Services.SocketService.removeListener('onRoomActivity', this.onRoomActivity);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            _reactNativeOrientation2.default.lockToPortrait();

            if (this.intervalCountDown != null) clearInterval(this.intervalCountDown);

            _Services.SocketService.on('onFinishedRound', this.onFinishedRound.bind(this));
            _Services.SocketService.on('onStartRound', this.onStartRound.bind(this));
            _Services.SocketService.on('onRoomActivity', this.onRoomActivity.bind(this));

            this.setState({ spinner: false, round: { name: this.props.round.name, duration: this.props.round.duration }, isPairing: false });

            _Services.PreferencesService.getPreferenceByKey('soundEnabled', function (value) {
                _this2.setState({ soundEnabled: value });
            });
        }
    }, {
        key: 'onFinishedRound',
        value: function onFinishedRound(data) {
            var _this3 = this;

            clearInterval(this.intervalCountDown);
            if (this.commonDialog && data.isOwnerDisconnected) {
                this.commonDialog.show('error', 'El creador de la sala se ha desconectado.', function () {
                    setTimeout(function () {
                        _this3.props.navigator.dismissModal();
                    }, 500);
                });
            }
        }
    }, {
        key: 'onStartRound',
        value: function onStartRound(data) {
            var _this4 = this;

            this.setState({ isStartingRound: true });

            if (this.customNavbar) {
                this.customNavbar.showMessage('Recuerda que apenas inicie la ronda debes comenzar a responder. Este juego no es por turnos. ¡Muchos éxitos en tu partida!', {
                    containerTextStyle: {
                        maxWidth: width / 1.3
                    },
                    backgroundColor: '#1aba5d',
                    duration: 8000,
                    animation: "bounceInDown",
                    animationDuration: 500,
                    onPress: function onPress() {
                        if (_this4.customNavbar) _this4.customNavbar.hide();
                    }
                });
            }

            if (this.intervalCountDown == null && this.state.isMounted) {
                _Services.QuestionService.getCategoriesWithRandomQuestions({}, function (categories) {
                    _this4.countDownSound = new Sound('countdown.mp3', Sound.MAIN_BUNDLE, function (err) {});
                    _this4.intervalCountDown = setInterval(function () {
                        if (!_this4.state.isMounted) return;

                        var countDown = _this4.state.countDown - 1;
                        if (countDown == 0) {
                            _this4.setState({ countDown: countDown });
                            clearInterval(_this4.intervalCountDown);

                            setTimeout(function () {
                                var screen = _extends({}, _global.Global.Screen.Dashboard.InRoundCategories);
                                screen.passProps = {
                                    categories: categories,
                                    roomId: _this4.props.round.id,
                                    duration: _this4.props.round.duration
                                };
                                _this4.props.navigator.push(screen);
                            });
                        } else if (countDown > 0) {
                            if (_this4.countDownSound && _this4.state.soundEnabled) _this4.countDownSound.play();

                            _this4.setState({ countDown: countDown });
                            if (_this4.numberCountDown != null) {
                                _this4.numberCountDown.transitionTo({
                                    fontSize: FONTSIZE_COUNTDOWN_ON
                                });
                                setTimeout(function () {
                                    if (_this4.numberCountDown != null) {
                                        _this4.numberCountDown.transitionTo({
                                            fontSize: FONTSIZE_COUNTDOWN_OFF
                                        });
                                    }
                                }, 100);
                            }
                        }
                    }, 1000);
                });
            }
        }
    }, {
        key: 'onRoomActivity',
        value: function onRoomActivity(data) {
            var players = [];
            for (var i = 0; i < data.accounts.length; i++) {
                var account = data.accounts[i];
                if (account) {
                    players.push({
                        name: account.profile.name + ' ' + account.profile.lastName,

                        avatar: account.avatar,
                        rank: account.rank
                    });
                    console.log(account);
                }
            }

            var round = _extends({}, this.state.round);
            round.players = players;
            this.setState({ round: round });
        }
    }, {
        key: 'renderNavbar',
        value: function renderNavbar() {
            var _this5 = this;

            return _react3.default.createElement(_CustomNavbar2.default, {
                ref: function ref(e) {
                    _this5.customNavbar = e;
                },
                navigator: this.props.navigator,
                backButton: false,
                gradientColors: ['#ED6552', '#ed5e26'],
                customCenterView: function customCenterView() {
                    return _react3.default.createElement(
                        _reactNative.TouchableOpacity,
                        {
                            style: { flex: 1, flexDirection: 'row', alignSelf: 'center', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 217
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Text,
                            { style: _general.GeneralStyle.customNavbarTitle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 219
                                }
                            },
                            _strings.strings.Round.toUpperCase()
                        )
                    );
                },
                customRightView: function customRightView() {
                    return null;
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 210
                }
            });
        }
    }, {
        key: 'renderCustomMenu',
        value: function renderCustomMenu() {
            var _this6 = this;

            return _react3.default.createElement(_CustomMenu2.default, {
                isOpened: this.state.openedHamburguerMenu,
                onClose: function onClose() {
                    _this6.setState({ openedHamburguerMenu: false });
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 233
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this7 = this;

            if (this.state.isPairing) return this.renderLoading();

            return _react3.default.createElement(
                _reactNative.View,
                { style: styles.container, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 247
                    }
                },
                _react3.default.createElement(_CommonDialog2.default, {
                    ref: function ref(e) {
                        _this7.commonDialog = e;
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 249
                    }
                }),
                _react3.default.createElement(_SpinnerComponent2.default, {
                    isVisible: this.state.spinner, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 252
                    }
                }),
                _react3.default.createElement(_InviteFriendEmail2.default, {
                    onClose: function onClose() {
                        _this7.setState({ isInvitingFriend: false });
                    },
                    isVisible: this.state.isInvitingFriend, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 255
                    }
                }),
                this.renderNavbar(),
                this.renderCustomMenu(),
                _react3.default.createElement(_reactNativeActionsheet.ActionSheetCustom, {
                    ref: function ref(o) {
                        return _this7.ActionSheet = o;
                    },
                    title: _react3.default.createElement(
                        _reactNative.Text,
                        { style: { color: '#222', fontFamily: _default.Font.TitanOne, fontSize: 14 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 266
                            }
                        },
                        'Escoje una opci\xF3n'
                    ),
                    options: options,
                    cancelButtonIndex: 0,
                    destructiveButtonIndex: 1,
                    onPress: function onPress(index) {
                        if (index == 1) {
                            setTimeout(function () {
                                _this7.props.navigator.dismissModal();
                            }, 500);
                        } else if (index == 2) {
                            _this7.setState({ isInvitingFriend: true });
                        }
                    },
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 264
                    }
                }),
                _react3.default.createElement(
                    _reactNativeInteractable2.default.View,
                    {
                        ref: 'interactableView',
                        verticalOnly: true,
                        snapPoints: [{ y: 0 }, { y: -130 }],
                        boundaries: { top: -130, bottom: 25 },
                        onDrag: function onDrag(e) {
                            var _e$nativeEvent = e.nativeEvent,
                                y = _e$nativeEvent.y,
                                state = _e$nativeEvent.state,
                                x = _e$nativeEvent.x;

                            if (y < -80 && state == 'end' && !_this7.state.isStartingRound) {
                                _this7.refs.interactableView.snapTo({ index: 0 });
                                _this7.ActionSheet.show();
                            }
                        },
                        animatedValueY: this._actionsDeltaY, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 281
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.ImageBackground,
                        {
                            source: require('../../images/wordeo/general/background.jpg'),
                            style: { width: '100%', height: '130%', justifyContent: 'center' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 295
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.View,
                            { style: [styles.bubbleContainer], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 298
                                }
                            },
                            _react3.default.createElement(_reactNative.Image, { style: { flex: 0, height: 80, marginVertical: 10, maxHeight: height / 3, resizeMode: 'contain' }, source: require('../../images/wordeo/round/trophy.png'), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 299
                                }
                            }),
                            _react3.default.createElement(
                                _reactNative.View,
                                { style: [styles.bubble, { flex: 1 }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 300
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    { style: [_general.GeneralStyle.header, { color: 'white', backgroundColor: 'transparent', marginBottom: 15 }], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 301
                                        }
                                    },
                                    this.state.round.name
                                ),
                                this.state.round.players == null || this.state.round.players.length == 0 ? _react3.default.createElement(_reactNative.ActivityIndicator, { color: 'white', size: 1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 303
                                    }
                                }) : _react3.default.createElement(_reactNative.FlatList, {
                                    scrollEnabled: false,
                                    centerContent: false,
                                    style: { flex: 1 },
                                    contentContainerStyle: { alignItems: 'center', justifyContent: 'center', flexDirection: 'row', width: '100%', height: '100%', flex: 1 },
                                    snapToAlignment: 'start',
                                    data: this.state.round.players,
                                    renderItem: function renderItem(rowData) {
                                        return _this7.renderPlayer(rowData.item);
                                    },
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 305
                                    }
                                })
                            ),
                            this.state.isStartingRound && _react3.default.createElement(
                                _reactNative.View,
                                { style: { flex: 1, maxHeight: height / 3, justifyContent: 'flex-start', alignItems: 'center', width: '100%', marginTop: 40 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 319
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.loadingPairingText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 321
                                        }
                                    },
                                    'Starting round in..'
                                ),
                                _react3.default.createElement(
                                    _reactNative.View,
                                    { style: { zIndex: 9999, width: '100%', justifyContent: 'center', alignItems: 'center', borderRadius: 10, overflow: 'hidden' }, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 322
                                        }
                                    },
                                    _react3.default.createElement(
                                        Animatable.Text,
                                        { style: [styles.loadingPairingText, { backgroundColor: 'rgba(0,0,0,.1)', width: '60%', textAlign: 'center' }],
                                            ref: function ref(e) {
                                                _this7.numberCountDown = e;
                                            }, __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 323
                                            }
                                        },
                                        this.state.countDown
                                    )
                                )
                            ),
                            !this.state.isStartingRound && _react3.default.createElement(
                                _reactNative.View,
                                { style: { flex: 1, justifyContent: 'flex-start', alignItems: 'center', width: '100%', marginTop: 40 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 330
                                    }
                                },
                                _react3.default.createElement(_reactNative.ActivityIndicator, { color: 'white', size: 1, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 331
                                    }
                                }),
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    { style: styles.loadingPairingText, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 332
                                        }
                                    },
                                    'Esperando jugadores..'
                                )
                            )
                        )
                    )
                ),
                !this.state.isStartingRound && _react3.default.createElement(
                    _reactNative.Text,
                    { style: styles.actionText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 339
                        }
                    },
                    'Desliza para opciones'
                )
            );
        }
    }, {
        key: 'renderPlayer',
        value: function renderPlayer(item) {
            return _react3.default.createElement(
                _reactNative.View,
                { key: 'player' + item.id, style: { backgroundColor: 'transparent', alignItems: 'center' }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 347
                    }
                },
                _react3.default.createElement(_reactNative.Image, { style: { marginLeft: 0, width: 80, height: 80, minWidth: 80, minHeight: 80, borderRadius: 20, resizeMode: 'cover' }, source: { uri: item.avatar }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 348
                    }
                }),
                _react3.default.createElement(
                    _reactNative.View,
                    { style: { flexDirection: 'column', height: 80, backgroundColor: 'rgba(255,255,255,.15)', padding: 5, borderRadius: 10, borderWidth: 1, borderColor: 'rgba(255,255,255,.1)' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 349
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.Text,
                        {
                            numberOfLines: 0,
                            style: { flex: 1, flexWrap: 'wrap', height: 100, backgroundColor: 'transparent', color: 'white', fontFamily: _default.Font.PTSansBold, marginTop: 5, fontSize: 14, textAlign: 'center' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 350
                            }
                        },
                        item.name
                    ),
                    item.rank && item.rank > -1 && _react3.default.createElement(
                        _reactNative.Text,
                        {
                            numberOfLines: 0,
                            style: { flex: 1, flexWrap: 'wrap', height: 100, backgroundColor: 'transparent', color: 'white', padding: 5, fontFamily: _default.Font.TitanOne, marginTop: 5, fontSize: 14, textAlign: 'center' }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 354
                            }
                        },
                        '#',
                        item.rank,
                        ' en ranking'
                    )
                )
            );
        }
    }, {
        key: 'renderLoading',
        value: function renderLoading() {
            return _react3.default.createElement(
                _reactNative.ImageBackground,
                {
                    source: require('../../images/wordeo/general/background.jpg'),
                    style: { width: '100%', height: '100%', justifyContent: 'center' }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 366
                    }
                },
                _react3.default.createElement(_reactNative.ActivityIndicator, { color: 'white', size: 1, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 369
                    }
                }),
                _react3.default.createElement(
                    _reactNative.Text,
                    { style: styles.loadingPairingText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 370
                        }
                    },
                    'Esperando jugadores..'
                )
            );
        }
    }]);

    return Round;
}(_react2.Component));

exports.default = Round;


var styles = _reactNative.StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: 'white'
    },
    loadingPairingText: {
        marginTop: 20,
        backgroundColor: 'transparent',
        width: '80%',
        textAlign: 'center',
        alignSelf: 'center',
        color: 'white',
        fontFamily: _default.Font.TitanOne,
        fontSize: 24
    },
    bubble: {
        flex: 1,
        width: '90%',
        height: 140,
        maxHeight: height / 3,
        alignSelf: 'center',
        justifyContent: 'center'
    },
    bubbleContainer: {
        width: '100%',
        alignItems: 'center',
        flex: 1
    },
    actions: {
        width: '100%',
        position: 'absolute',
        bottom: -60

    },
    actionButton: {
        position: 'absolute',
        bottom: 0,
        width: '95%',
        height: 40,
        marginBottom: 10,
        alignSelf: 'center',
        padding: 10,
        backgroundColor: _default.Color.BluePrimary,
        borderRadius: 5
    },
    actionText: {
        position: 'absolute',
        backgroundColor: 'transparent',
        bottom: 10,
        padding: 5,
        alignSelf: 'center',
        textAlign: 'center',
        color: 'white',
        fontSize: 13,
        fontFamily: _default.Font.TitanOne
    }
});